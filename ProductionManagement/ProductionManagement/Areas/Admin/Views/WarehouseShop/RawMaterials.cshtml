@model IEnumerable<ProductionManagement.Models.ViewModels.WarehouseShop.RawMaterialVM>

@{
    ViewBag.Title = "Raw Materials";
}

<h2>Raw Materials List</h2>

<select id="SelectedCategory" name="SelectedCategory">
    <option value="0">All</option>
    @foreach (var item in ViewBag.RawMaterialsCategories)
    {
        if (ViewBag.SelectedCategory == item.Value)
        {
            <option selected="selected" value="@item.Value">@item.Text</option>
        }
        else
        {
            <option value="@item.Value">@item.Text</option>
        }
    }
</select>


<p>
    @Html.ActionLink("Add New Material", "AddRawMaterial")
</p>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RawTypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lenght)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Thickness)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MeasureUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RawTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lenght)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Width)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Thickness)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeasureUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditRawMaterial", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteRawMaterial", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>

@section Scripts{
    @*jquery ui cdn *@
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>

    <script>
        $(function () {
            /*
             * Select Raw materials from specified categories
             */

            $("#SelectedCategory").on("change", function () {
                var url = $(this).val();
                if (url) {
                    window.location = "/Admin/WarehouseShop/RawMaterials?catId=" + url;
                }

                return false;
            })

            $("a.delete").click(function () {
                if (!confirm("Confirm material deletion?")) return false;
            })

        })


    </script>
}
